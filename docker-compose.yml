version: '3.8'
services:
  springboot-backend:
    build:
      context: springboot-backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - MYSQL_URL=jdbc:mysql://mysqlserver/employee
      - OTEL_SERVICE_NAME=springboot-backend
#      - OTEL_EXPORTER_OTLP_TRACES_PROTOCOL=grpc
#      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otelcol:4317
#      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otelcol:4317
    depends_on:
      mysqlserver:
        condition: service_completed_successfully
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      - frontend
  react-frontend:
    build:
      context: react-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    container_name: frontend
    depends_on:
      - springboot-backend
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8080/api/v1
      - REACT_APP_API_AUTHENTICATE_BASE_URL=http://localhost:8080/api/auth
#      - OTEL_EXPORTE_OTLP_ENDPOINT=http://otelcol:4318/v1/traces
#      - OTEL_SERVICE_NAME=react-frontend
#      - OTEL_TRACES_EXPORTER=logging
#      - OTEL_METRICS_EXPORTER=logging
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - frontend
      - backend
  mysqlserver:
    image: mysql:8.3.0
    container_name: mysqlserver
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=Saubeo@111
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
      - MYSQL_USER=namln10
      - MYSQL_PASSWORD=Saubeo@111
      - MYSQL_DATABASE=employee
      - mysql_data:/var/lib/mysql
      - mysql_config:/etc/mysql/conf.d
    networks:
      - backend
#  jaeger:
#    container_name: jaeger
#    image: jaegertracing/all-in-one:1.53
#    ports:
#      - "16686:16686"
#      - "14278:14278"
#    command:
#      - "--query.ui-config=/etc/jaeger/jaeger-ui.json"
#    volumes:
#      - "./jaeger-ui.json:/etc/jaeger/jaeger-ui.json"
#    environment:
#      - METRICS_STORAGE_TYPE=prometheus
#      - PROMETHEUS_SERVER_URL=http://prometheus:9090
#      - PROMETHEUS_QUERY_SUPPORT_SPANMETRICS_CONNECTOR=true
#      - PROMETHEUS_QUERY_NORMALIZE_CALLS=true
#      - PROMETHEUS_QUERY_NORMALIZE_DURATION=true
#    networks:
#      - backend
#  otelcol:
#    networks:
#      - backend
#    image: otel/opentelemetry-collector-contrib:0.93.0
#    container_name: otelcol
#    volumes:
#      - ./springboot-backend/otel-config.yml:/etc/otelcol/otel-collector-config.yml
#
#    command:
#        - --config=/etc/otelcol/otel-collector-config.yml
#    ports:
#      - "4317:4317"
#      - "4318:4318"
#    depends_on:
#      - jaeger
  prometheus:
    networks:
      - backend
    image: quay.io/prometheus/prometheus:v2.49.1
    volumes:
      - "./springboot-backend/prometheus.yml:/etc/prometheus/prometheus.yml"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --enable-feature=otlp-write-receiver
    ports:
      - "9090:9090"
    container_name: prometheus
    
volumes:
  mysql_data:
  mysql_config:
networks:
  backend:
  frontend:
